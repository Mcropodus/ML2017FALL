from PIL import Image
import numpy as np

def Sequential(i1, i2):
    im1 = np.asarray(i1) # reference
    im2 = np.asarray(i2) # target

    macroblock = [] # 16*16 matrix to check reference and target
    macroblock.append([])
    macroblock.append([])

    for i in range(16): # initial the macroblock
        macroblock[0].append(0)
        macroblock[1].append(0)


    # min_MAD1 = 99999
    # min_MAD2 = 99999
    # for i in range(-15, 15):
    #   for j in range(-15, 15):
    #       cur_MAD1 = i1(i, j)
    #       if cur_MAD1 < min_MAD1:
    #           min_MAD1 = cur_MAD1
    #           u = i
    #           v = j
    # for i in range(-15, 15):
    #   for j in range(-15, 15):
    #       cur_MAD2 = i2(i, j)
    #       if cur_MAD2 < min_MAD2:
    #           min_MAD2 = cur_MAD2
    #           u = i
    #           v = j
    #
    # i1.show()

def TwoD_logarithm(i1, i2):


#def SNR(i1, i2):
#    x = i1.size[0]
#    y = i1.size[1]
#
#    a = []
#    b = []
#
#    result = []
#    for i in range(x*y):
#        a[i] = i2[i]*i2[i]
#        b[i] = (i1-i2)*(i1-i2)
#        result[i] = a[i]/b[i]



reference = Image.open('i1.jpg').convert('L')
target = Image.open('i2.jpg').convert('L')


#reference.show()
Sequential(reference, target)
#TwoD_logarithm(im1, im2)
#SNR(im1, im2)