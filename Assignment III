from PIL import Image
import numpy as np

def Sequential(i1, i2):
    im1 = np.asarray(i1) # reference
    im2 = np.asarray(i2) # target

    x = i1.size[0]
    y = i1.size[1]
    p = 15 # 2p + 1 = 31, p = 15

    a = []
    a.append([])
    a.append([])
    b = []
    b.append([])
    b.append([])

    for i in range(1000): # initial a and b
        a[0].append(0)
        a[1].append(0)
        b[0].append(0)
        b[1].append(0)

    for i in range(x):
        for j in range(y):
            a[p+1+i, p+1+j] =im1[i, j]
            b[p+1+i, p+1+j] =im2[i, j]
    
    # a.show()
    # b.show()
    img = []
    img.append([])
    img.append([])

    for i in range(x): # initial img
        img[0].append(0)
    for i in range(y):
        img[1].append(0)


    # min_MAD1 = 99999
    # min_MAD2 = 99999
    # for i in range(-15, 15):
    #   for j in range(-15, 15):
    #       cur_MAD1 = i1(i, j)
    #       if cur_MAD1 < min_MAD1:
    #           min_MAD1 = cur_MAD1
    #           u = i
    #           v = j
    # for i in range(-15, 15):
    #   for j in range(-15, 15):
    #       cur_MAD2 = i2(i, j)
    #       if cur_MAD2 < min_MAD2:
    #           min_MAD2 = cur_MAD2
    #           u = i
    #           v = j
    #
    # i1.show()

def TwoD_logarithm(i1, i2):


def SNR(i1, i2):
   x = i1.size[0]
   y = i1.size[1]

   a = []
   b = []

   result = []
   for i in range(x*y):
       a[i] = i2[i]*i2[i]
       b[i] = (i1-i2)*(i1-i2)
       result[i] = a[i]/b[i]



reference = Image.open('i1.jpg').convert('L')
target = Image.open('i2.jpg').convert('L')


#reference.show()
Sequential(reference, target)
#TwoD_logarithm(im1, im2)
#SNR(im1, im2)